# To improve query performance, we strongly suggest adding indexes to any field that you plan to filter or sort by
# Add the `@index` or `@index(unique: true)` annotation after any non-key field
# https://academy.subquery.network/build/graphql.html#indexing-by-non-primary-key-field

############################################
#                 NFT2.0
############################################
type DataRegistry @entity {
  id: ID!
  blockHeight: BigInt  
  address: String
  dapp: String
  uri: String
  version: String  
}

type DataRegistrySchema @entity {
  id: ID!
  registry: DataRegistry!
  key: String!
  schema: String!
}

type DataRegistryNFTData @entity {
  id: ID!
  blockHeight: BigInt
  txHash: String
  dataRegistry: DataRegistry!
  collection: String!
  tokenId: BigInt!
  key: String
  value: String  
}

type DataRegistryNFTInscription @entity {
  id: ID!
  blockHeight: BigInt
  txHash: String
  dataRegistry: DataRegistry!
  collection: String!
  tokenId: BigInt!
  metadata: String  
}

type Collection @entity {
  id: ID!
  blockHeight: BigInt
  address: String
  owner: String
  kind: Int
}

type NFT @entity {
  id: ID!
  blockHeight: BigInt
  collection: String!
  tokenId: BigInt!
  owner: String
  isBurned: Boolean
  isDerived: Boolean
  underlyingNFT: NFT
}

type DerivedAccount @entity {
  id: ID!
  blockHeight: BigInt
  address: String
  underlyingCollection: String
  underlyingTokenId: BigInt
}

type DerivedAccountRoyaltyClaimed @entity {
  id: ID!
  blockHeight: BigInt
  txHash: String
  derivedAccount: DerivedAccount!
  token: String
  amount: BigInt
  receiver: String
}

type AddonsCollection @entity {
  id: ID!
  blockHeight: BigInt
  contract: String
  collection: String
  kind: Int
  campaignId: String
  data: String
}

############################################
#               MARKETPLACE
############################################
type TakerBid @entity {
  id: ID!
  blockHeight: BigInt
  taker: String
  maker: String
  strategy: String
  orderHash: String
  orderNonce: BigInt
  currency: String
  collection: String
  tokenId: BigInt
  amount: BigInt
  price: BigInt
}

type TakerAsk @entity {
  id: ID!
  blockHeight: BigInt
  taker: String
  maker: String
  strategy: String
  orderHash: String
  orderNonce: BigInt
  currency: String
  collection: String
  tokenId: BigInt
  amount: BigInt
  price: BigInt
}

type CancelAllOrders @entity {
  id: ID!
  blockHeight: BigInt
  user: String
  newMinNonce: BigInt
}

type CancelMultipleOrders @entity {
  id: ID!
  blockHeight: BigInt
  user: String
  orderNonces: [BigInt]
}

type RoyaltyPayment @entity {
  id: ID!
  blockHeight: BigInt
  collection: String
  tokenId: BigInt
  royaltyRecipient: String
  currency: String
  amount: BigInt
}